TODO: correct beginning part by results!

k=1
h	VC	M	comment
1	2		
2	4		
3	5		
4	5		(6, 1, 4, 62, 0.96875)
5	5		(6, 1, 5, 62, 0.96875)
6	5		(6, 1, 6, 62, 0.96875)(7, 1, 6, 124, 0.96875)
7	6		(7, 1, 7, 124, 0.96875)
8	6		(7, 1, 8, 126, 0.984375)

k=2:

(h-1)(k-1)+k+1+2 for h>1

h	VC	M	comment
1	3		(4, 2, 1, 14, 0.875)
2	6		(7, 2, 2, 124, 0.96875) 4+2
3	7	7	(8, 2, 3, 252, 0.984375)(9, 2, 3, 250, 0.9765625)
4	9	8	(10, 2, 4, 252, 0.984375)(11, 2, 4, 248, 0.96875)
5	11	9	(12, 2, 5, 254, 0.9921875)
6	10	10	(11, 2, 6, 254, 0.9921875)(12, 2, 6, 252, 0.984375)(13, 2, 6, 250, 0.9765625)
7	12	11	(13, 2, 7, 254, 0.9921875)(14, 2, 7, 250, 0.9765625)
8	12	12	(13, 2, 8, 254, 0.9921875)(14, 2, 8, 250, 0.9765625)(15, 2, 8, 248, 0.96875)

k=3
h	VC	M	comment
1	4		(5, 3, 1, 30, 0.9375)
2	8	8	(9, 3, 2, 250, 0.9765625) 6+2
3	9	10	(10, 3, 3, 254, 0.9921875)(11, 3, 3, 248, 0.96875)
4	11	12	(12, 3, 4, 254, 0.9921875)(13, 3, 4, 250, 0.9765625)(14, 3, 4, 248, 0.96875)
5	14	14	(15, 3, 5, 254, 0.9921875)(16, 3, 5, 252, 0.984375)(17, 3, 5, 250, 0.9765625)
6	14	16	(15, 3, 6, 254, 0.9921875)(16, 3, 6, 254, 0.9921875)(17, 3, 6, 250, 0.9765625)(18, 3, 6, 246, 0.9609375)
7	17	18	(18, 3, 7, 254, 0.9921875)(19, 3, 7, 252, 0.984375)(20, 3, 7, 250, 0.9765625)(21, 3, 7, 246, 0.9609375)(22, 3, 7, 246, 0.9609375)
8	18	20	(19, 3, 8, 254, 0.9921875)(20, 3, 8, 252, 0.984375)(21, 3, 8, 252, 0.984375)(22, 3, 8, 252, 0.984375)(23, 3, 8, 248, 0.96875)(24, 3, 8, 246, 0.9609375)(25, 3, 8, 244, 0.953125)

k=4
h	VC	M	comment
1	5		(6, 4, 1, 62, 0.96875)
2	8	10	(9, 4, 2, 254, 0.9921875)(10, 4, 2, 248, 0.96875) 8+2
3	13	13	(14, 4, 3, 252, 0.984375)(15, 4, 3, 248, 0.96875)
4	14	15	(15, 4, 4, 252, 0.984375)(16, 4, 4, 248, 0.96875)(17, 4, 4, 248, 0.96875)
5	16	18	(17, 4, 5, 254, 0.9921875)(18, 4, 5, 252, 0.984375)(19, 4, 5, 248, 0.96875)
6	18	21	(19, 4, 6, 254, 0.9921875)(20, 4, 6, 254, 0.9921875)(21, 4, 6, 254, 0.9921875)(22, 4, 6, 248, 0.96875)(23, 4, 6, 244, 0.953125)(24, 4, 6, 244, 0.953125)
7	22	24	(23, 4, 7, 254, 0.9921875)(24, 4, 7, 252, 0.984375)(25, 4, 7, 250, 0.9765625)(26, 4, 7, 250, 0.9765625)(27, 4, 7, 246, 0.9609375)(28, 4, 7, 244, 0.953125)
8	23	27	(24, 4, 8, 254, 0.9921875)(25, 4, 8, 250, 0.9765625)(26, 4, 8, 246, 0.9609375)(27, 4, 8, 252, 0.984375)(28, 4, 8, 244, 0.953125)(29, 4, 8, 244, 0.953125)

k=5
h	VC	M	comment
1	6		(7, 5, 1, 126, 0.984375)
2	9	12	(10, 5, 2, 254, 0.9921875)(11, 5, 2, 250, 0.9765625)(12, 5, 2, 246, 0.9609375) 10+2
3	14	16	(15, 5, 3, 254, 0.9921875)(16, 5, 3, 250, 0.9765625)(17, 5, 3, 244, 0.953125)
4	16	20	(17, 5, 4, 252, 0.984375)(18, 5, 4, 252, 0.984375)(19, 5, 4, 252, 0.984375)(20, 5, 4, 244, 0.953125)(21, 5, 4, 246, 0.9609375)
5	20	24	(21, 5, 5, 252, 0.984375)(22, 5, 5, 252, 0.984375)(23, 5, 5, 254, 0.9921875)(24, 5, 5, 252, 0.984375)(25, 5, 5, 244, 0.953125)
6	25	28	(26, 5, 6, 250, 0.9765625)(27, 5, 6, 250, 0.9765625)(28, 5, 6, 248, 0.96875)(29, 5, 6, 244, 0.953125)(30, 5, 6, 246, 0.9609375)(31, 5, 6, 246, 0.9609375)
7	24	32?	(25, 5, 7, 254, 0.9921875)(26, 5, 7, 254, 0.9921875)(27, 5, 7, 254, 0.9921875)(28, 5, 7, 252, 0.984375)(29, 5, 7, 246, 0.9609375)(30, 5, 7, 248, 0.96875)(31, 5, 7, 246, 0.9609375)(32, 5, 7, 242, 0.9453125)
8	26	36?	(27, 5, 8, 254, 0.9921875)(28, 5, 8, 254, 0.9921875)(29, 5, 8, 254, 0.9921875)(30, 5, 8, 254, 0.9921875)(31, 5, 8, 248, 0.96875)(32, 5, 8, 246, 0.9609375)(33, 5, 8, 248, 0.96875)(36, 5, 8, 238, 0.9296875)

















('n', 'k', 'h', 'successful classifications', 'rate')
(1, 2, 1, 2, 1.0)
(2, 2, 1, 4, 1.0)
(3, 2, 1, 8, 1.0)
(4, 2, 1, 14, 0.875)
KVC(0.9): (3, 2, 1)

(1, 2, 2, 2, 1.0)
(2, 2, 2, 4, 1.0)
(3, 2, 2, 8, 1.0)
(4, 2, 2, 16, 1.0)
(5, 2, 2, 32, 1.0)
(6, 2, 2, 62, 0.96875, 'intermediate', 1, 0.9375)
(6, 2, 2, 64, 1.0)
(7, 2, 2, 118, 0.921875, 'intermediate', 1, 0.890625)
(7, 2, 2, 126, 0.984375, 'intermediate', 19, 0.921875)
(7, 2, 2, 126, 0.984375)
(8, 2, 2, 216, 0.84375, 'intermediate', 1, 0.71875)
(8, 2, 2, 222, 0.8671875, 'intermediate', 11, 0.84375)
(8, 2, 2, 226, 0.8828125, 'intermediate', 19, 0.8671875)
(8, 2, 2, 226, 0.8828125)
KVC(0.9): (7, 2, 2)

(1, 2, 3, 2, 1.0)
(2, 2, 3, 4, 1.0)
(3, 2, 3, 8, 1.0)
(4, 2, 3, 16, 1.0)
(5, 2, 3, 32, 1.0)
(6, 2, 3, 64, 1.0)
(7, 2, 3, 128, 1.0)
(8, 2, 3, 250, 0.9765625, 'intermediate', 3, 0.9609375)
(8, 2, 3, 252, 0.984375, 'intermediate', 9, 0.9765625)
(8, 2, 3, 252, 0.984375)
(9, 2, 3, 234, 0.9140625, 'intermediate', 1, 0.90625)
(9, 2, 3, 244, 0.953125, 'intermediate', 3, 0.9140625)
(9, 2, 3, 246, 0.9609375, 'intermediate', 7, 0.953125)
(9, 2, 3, 248, 0.96875, 'intermediate', 13, 0.9609375)
(9, 2, 3, 248, 0.96875)
(10, 2, 3, 224, 0.875, 'intermediate', 2, 0.84375)
(10, 2, 3, 232, 0.90625, 'intermediate', 3, 0.875)
(10, 2, 3, 234, 0.9140625, 'intermediate', 13, 0.90625)
(10, 2, 3, 240, 0.9375, 'intermediate', 15, 0.9140625)
(10, 2, 3, 240, 0.9375)
(11, 2, 3, 204, 0.796875, 'intermediate', 2, 0.7890625)
(11, 2, 3, 210, 0.8203125, 'intermediate', 6, 0.796875)
(11, 2, 3, 216, 0.84375, 'intermediate', 7, 0.8203125)
(11, 2, 3, 216, 0.84375)
KVC(0.9): (10, 2, 3)

(1, 2, 4, 2, 1.0)
(2, 2, 4, 4, 1.0)
(3, 2, 4, 8, 1.0)
(4, 2, 4, 16, 1.0)
(5, 2, 4, 32, 1.0)
(6, 2, 4, 64, 1.0)
(7, 2, 4, 128, 1.0)
(8, 2, 4, 254, 0.9921875, 'intermediate', 1, 0.96875)
(8, 2, 4, 256, 1.0)
(9, 2, 4, 254, 0.9921875, 'intermediate', 2, 0.953125)
(9, 2, 4, 256, 1.0)
(10, 2, 4, 244, 0.953125, 'intermediate', 2, 0.921875)
(10, 2, 4, 246, 0.9609375, 'intermediate', 4, 0.953125)
(10, 2, 4, 250, 0.9765625, 'intermediate', 9, 0.9609375)
(10, 2, 4, 250, 0.9765625)
(11, 2, 4, 238, 0.9296875, 'intermediate', 9, 0.90625)
(11, 2, 4, 238, 0.9296875)
(12, 2, 4, 220, 0.859375, 'intermediate', 1, 0.796875)
(12, 2, 4, 222, 0.8671875, 'intermediate', 7, 0.859375)
(12, 2, 4, 228, 0.890625, 'intermediate', 10, 0.8671875)
(12, 2, 4, 236, 0.921875, 'intermediate', 12, 0.890625)
(12, 2, 4, 236, 0.921875)
(13, 2, 4, 212, 0.828125, 'intermediate', 3, 0.7421875)
(13, 2, 4, 212, 0.828125)
KVC(0.9): (12, 2, 4)

(1, 2, 5, 2, 1.0)
(2, 2, 5, 4, 1.0)
(3, 2, 5, 8, 1.0)
(4, 2, 5, 16, 1.0)
(5, 2, 5, 32, 1.0)
(6, 2, 5, 64, 1.0)
(7, 2, 5, 128, 1.0)
(8, 2, 5, 256, 1.0)
(9, 2, 5, 256, 1.0)
(10, 2, 5, 252, 0.984375, 'intermediate', 2, 0.9609375)
(10, 2, 5, 254, 0.9921875, 'intermediate', 3, 0.984375)
(10, 2, 5, 256, 1.0)
(11, 2, 5, 244, 0.953125, 'intermediate', 2, 0.9375)
(11, 2, 5, 246, 0.9609375, 'intermediate', 3, 0.953125)
(11, 2, 5, 250, 0.9765625, 'intermediate', 9, 0.9609375)
(11, 2, 5, 252, 0.984375, 'intermediate', 15, 0.9765625)
(11, 2, 5, 252, 0.984375)
(12, 2, 5, 232, 0.90625, 'intermediate', 1, 0.890625)
(12, 2, 5, 236, 0.921875, 'intermediate', 2, 0.90625)
(12, 2, 5, 238, 0.9296875, 'intermediate', 4, 0.921875)
(12, 2, 5, 248, 0.96875, 'intermediate', 9, 0.9296875)
(12, 2, 5, 248, 0.96875)
(13, 2, 5, 214, 0.8359375, 'intermediate', 1, 0.8125)
(13, 2, 5, 228, 0.890625, 'intermediate', 2, 0.8359375)
(13, 2, 5, 232, 0.90625, 'intermediate', 4, 0.890625)
(13, 2, 5, 234, 0.9140625, 'intermediate', 8, 0.90625)
(13, 2, 5, 238, 0.9296875, 'intermediate', 10, 0.9140625)
(13, 2, 5, 246, 0.9609375, 'intermediate', 12, 0.9296875)
(13, 2, 5, 246, 0.9609375)
(14, 2, 5, 206, 0.8046875, 'intermediate', 2, 0.796875)
(14, 2, 5, 214, 0.8359375, 'intermediate', 3, 0.8046875)
(14, 2, 5, 220, 0.859375, 'intermediate', 4, 0.8359375)
(14, 2, 5, 232, 0.90625, 'intermediate', 12, 0.859375)
(14, 2, 5, 232, 0.90625)
(15, 2, 5, 184, 0.71875, 'intermediate', 1, 0.7109375)
(15, 2, 5, 202, 0.7890625, 'intermediate', 2, 0.71875)
(15, 2, 5, 212, 0.828125, 'intermediate', 4, 0.7890625)
(15, 2, 5, 212, 0.828125)
KVC(0.9): (14, 2, 5)

(1, 2, 6, 2, 1.0)
(2, 2, 6, 4, 1.0)
(3, 2, 6, 8, 1.0)
(4, 2, 6, 16, 1.0)
(5, 2, 6, 32, 1.0)
(6, 2, 6, 64, 1.0)
(7, 2, 6, 128, 1.0)
(8, 2, 6, 256, 1.0)
(9, 2, 6, 256, 1.0)
(10, 2, 6, 256, 1.0)
(11, 2, 6, 254, 0.9921875, 'intermediate', 2, 0.96875)
(11, 2, 6, 256, 1.0)
(12, 2, 6, 248, 0.96875, 'intermediate', 1, 0.9375)
(12, 2, 6, 252, 0.984375, 'intermediate', 9, 0.96875)
(12, 2, 6, 252, 0.984375)
(13, 2, 6, 234, 0.9140625, 'intermediate', 1, 0.8984375)
(13, 2, 6, 238, 0.9296875, 'intermediate', 2, 0.9140625)
(13, 2, 6, 240, 0.9375, 'intermediate', 3, 0.9296875)
(13, 2, 6, 248, 0.96875, 'intermediate', 4, 0.9375)
(13, 2, 6, 252, 0.984375, 'intermediate', 12, 0.96875)
(13, 2, 6, 252, 0.984375)
(14, 2, 6, 242, 0.9453125, 'intermediate', 3, 0.875)
(14, 2, 6, 244, 0.953125, 'intermediate', 4, 0.9453125)
(14, 2, 6, 244, 0.953125)
(15, 2, 6, 220, 0.859375, 'intermediate', 2, 0.8515625)
(15, 2, 6, 226, 0.8828125, 'intermediate', 3, 0.859375)
(15, 2, 6, 232, 0.90625, 'intermediate', 4, 0.8828125)
(15, 2, 6, 232, 0.90625)
(16, 2, 6, 216, 0.84375, 'intermediate', 3, 0.8125)
(16, 2, 6, 216, 0.84375)
KVC(0.9): (15, 2, 6)

(1, 2, 7, 2, 1.0)
(2, 2, 7, 4, 1.0)
(3, 2, 7, 8, 1.0)
(4, 2, 7, 16, 1.0)
(5, 2, 7, 32, 1.0)
(6, 2, 7, 64, 1.0)
(7, 2, 7, 128, 1.0)
(8, 2, 7, 256, 1.0)
(9, 2, 7, 256, 1.0)
(10, 2, 7, 256, 1.0)
(11, 2, 7, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(11, 2, 7, 256, 1.0)
(12, 2, 7, 248, 0.96875, 'intermediate', 1, 0.9375)
(12, 2, 7, 252, 0.984375, 'intermediate', 3, 0.96875)
(12, 2, 7, 254, 0.9921875, 'intermediate', 4, 0.984375)
(12, 2, 7, 254, 0.9921875)
(13, 2, 7, 240, 0.9375, 'intermediate', 2, 0.9296875)
(13, 2, 7, 246, 0.9609375, 'intermediate', 3, 0.9375)
(13, 2, 7, 248, 0.96875, 'intermediate', 4, 0.9609375)
(13, 2, 7, 250, 0.9765625, 'intermediate', 7, 0.96875)
(13, 2, 7, 254, 0.9921875, 'intermediate', 12, 0.9765625)
(13, 2, 7, 254, 0.9921875)
(14, 2, 7, 234, 0.9140625, 'intermediate', 1, 0.90625)
(14, 2, 7, 240, 0.9375, 'intermediate', 2, 0.9140625)
(14, 2, 7, 246, 0.9609375, 'intermediate', 3, 0.9375)
(14, 2, 7, 250, 0.9765625, 'intermediate', 12, 0.9609375)
(14, 2, 7, 250, 0.9765625)
(15, 2, 7, 224, 0.875, 'intermediate', 1, 0.8515625)
(15, 2, 7, 240, 0.9375, 'intermediate', 2, 0.875)
(15, 2, 7, 240, 0.9375)
(16, 2, 7, 224, 0.875, 'intermediate', 3, 0.8671875)
(16, 2, 7, 226, 0.8828125, 'intermediate', 12, 0.875)
(16, 2, 7, 228, 0.890625, 'intermediate', 17, 0.8828125)
(16, 2, 7, 228, 0.890625)
KVC(0.9): (15, 2, 7)

(1, 2, 8, 2, 1.0)
(2, 2, 8, 4, 1.0)
(3, 2, 8, 8, 1.0)
(4, 2, 8, 16, 1.0)
(5, 2, 8, 32, 1.0)
(6, 2, 8, 64, 1.0)
(7, 2, 8, 128, 1.0)
(8, 2, 8, 256, 1.0)
(9, 2, 8, 256, 1.0)
(10, 2, 8, 256, 1.0)
(11, 2, 8, 256, 1.0)
(12, 2, 8, 252, 0.984375, 'intermediate', 1, 0.9765625)
(12, 2, 8, 256, 1.0)
(13, 2, 8, 254, 0.9921875, 'intermediate', 7, 0.984375)
(13, 2, 8, 256, 1.0)
(14, 2, 8, 252, 0.984375, 'intermediate', 3, 0.9609375)
(14, 2, 8, 254, 0.9921875, 'intermediate', 17, 0.984375)
(14, 2, 8, 254, 0.9921875)
(15, 2, 8, 242, 0.9453125, 'intermediate', 1, 0.921875)
(15, 2, 8, 246, 0.9609375, 'intermediate', 2, 0.9453125)
(15, 2, 8, 248, 0.96875, 'intermediate', 3, 0.9609375)
(15, 2, 8, 248, 0.96875)
(16, 2, 8, 232, 0.90625, 'intermediate', 2, 0.8984375)
(16, 2, 8, 246, 0.9609375, 'intermediate', 3, 0.90625)
(16, 2, 8, 248, 0.96875, 'intermediate', 13, 0.9609375)
(16, 2, 8, 248, 0.96875)
(17, 2, 8, 228, 0.890625, 'intermediate', 1, 0.859375)
(17, 2, 8, 232, 0.90625, 'intermediate', 2, 0.890625)
(17, 2, 8, 236, 0.921875, 'intermediate', 3, 0.90625)
(17, 2, 8, 238, 0.9296875, 'intermediate', 4, 0.921875)
(17, 2, 8, 238, 0.9296875)
(18, 2, 8, 218, 0.8515625, 'intermediate', 1, 0.828125)
(18, 2, 8, 222, 0.8671875, 'intermediate', 3, 0.8515625)
(18, 2, 8, 224, 0.875, 'intermediate', 13, 0.8671875)
(18, 2, 8, 224, 0.875)
KVC(0.9): (17, 2, 8)

done
(1, 3, 1, 2, 1.0)
(2, 3, 1, 4, 1.0)
(3, 3, 1, 8, 1.0)
(4, 3, 1, 16, 1.0)
(5, 3, 1, 30, 0.9375)
(6, 3, 1, 52, 0.8125)
KVC(0.9): (5, 3, 1)

(1, 3, 2, 2, 1.0)
(2, 3, 2, 4, 1.0)
(3, 3, 2, 8, 1.0)
(4, 3, 2, 16, 1.0)
(5, 3, 2, 32, 1.0)
(6, 3, 2, 64, 1.0)
(7, 3, 2, 128, 1.0)
(8, 3, 2, 246, 0.9609375, 'intermediate', 2, 0.9296875)
(8, 3, 2, 248, 0.96875, 'intermediate', 3, 0.9609375)
(8, 3, 2, 250, 0.9765625, 'intermediate', 7, 0.96875)
(8, 3, 2, 252, 0.984375, 'intermediate', 9, 0.9765625)
(8, 3, 2, 252, 0.984375)
(9, 3, 2, 230, 0.8984375, 'intermediate', 1, 0.8671875)
(9, 3, 2, 234, 0.9140625, 'intermediate', 3, 0.8984375)
(9, 3, 2, 246, 0.9609375, 'intermediate', 5, 0.9140625)
(9, 3, 2, 248, 0.96875, 'intermediate', 9, 0.9609375)
(9, 3, 2, 248, 0.96875)
(10, 3, 2, 230, 0.8984375, 'intermediate', 9, 0.8671875)
(10, 3, 2, 236, 0.921875, 'intermediate', 15, 0.8984375)
(10, 3, 2, 236, 0.921875)
(11, 3, 2, 190, 0.7421875, 'intermediate', 2, 0.7265625)
(11, 3, 2, 204, 0.796875, 'intermediate', 3, 0.7421875)
(11, 3, 2, 208, 0.8125, 'intermediate', 9, 0.796875)
(11, 3, 2, 212, 0.828125, 'intermediate', 16, 0.8125)
(11, 3, 2, 212, 0.828125)
KVC(0.9): (10, 3, 2)

(1, 3, 3, 2, 1.0)
(2, 3, 3, 4, 1.0)
(3, 3, 3, 8, 1.0)
(4, 3, 3, 16, 1.0)
(5, 3, 3, 32, 1.0)
(6, 3, 3, 64, 1.0)
(7, 3, 3, 128, 1.0)
(8, 3, 3, 256, 1.0)
(9, 3, 3, 256, 1.0)
(10, 3, 3, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(10, 3, 3, 256, 1.0)
(11, 3, 3, 248, 0.96875, 'intermediate', 2, 0.953125)
(11, 3, 3, 250, 0.9765625, 'intermediate', 9, 0.96875)
(11, 3, 3, 250, 0.9765625)
(12, 3, 3, 246, 0.9609375, 'intermediate', 3, 0.9453125)
(12, 3, 3, 250, 0.9765625, 'intermediate', 5, 0.9609375)
(12, 3, 3, 250, 0.9765625)
(13, 3, 3, 236, 0.921875, 'intermediate', 5, 0.8984375)
(13, 3, 3, 236, 0.921875)
(14, 3, 3, 218, 0.8515625, 'intermediate', 1, 0.828125)
(14, 3, 3, 230, 0.8984375, 'intermediate', 8, 0.8515625)
(14, 3, 3, 230, 0.8984375)
KVC(0.9): (13, 3, 3)

(1, 3, 4, 2, 1.0)
(2, 3, 4, 4, 1.0)
(3, 3, 4, 8, 1.0)
(4, 3, 4, 16, 1.0)
(5, 3, 4, 32, 1.0)
(6, 3, 4, 64, 1.0)
(7, 3, 4, 128, 1.0)
(8, 3, 4, 256, 1.0)
(9, 3, 4, 256, 1.0)
(10, 3, 4, 256, 1.0)
(11, 3, 4, 256, 1.0)
(12, 3, 4, 256, 1.0)
(13, 3, 4, 256, 1.0)
(14, 3, 4, 242, 0.9453125, 'intermediate', 1, 0.9140625)
(14, 3, 4, 248, 0.96875, 'intermediate', 3, 0.9453125)
(14, 3, 4, 250, 0.9765625, 'intermediate', 19, 0.96875)
(14, 3, 4, 250, 0.9765625)
(15, 3, 4, 240, 0.9375, 'intermediate', 1, 0.9140625)
(15, 3, 4, 242, 0.9453125, 'intermediate', 9, 0.9375)
(15, 3, 4, 244, 0.953125, 'intermediate', 16, 0.9453125)
(15, 3, 4, 244, 0.953125)
(16, 3, 4, 228, 0.890625, 'intermediate', 1, 0.875)
(16, 3, 4, 236, 0.921875, 'intermediate', 12, 0.890625)
(16, 3, 4, 240, 0.9375, 'intermediate', 16, 0.921875)
(16, 3, 4, 240, 0.9375)
(17, 3, 4, 216, 0.84375, 'intermediate', 3, 0.8125)
(17, 3, 4, 218, 0.8515625, 'intermediate', 4, 0.84375)
(17, 3, 4, 220, 0.859375, 'intermediate', 12, 0.8515625)
(17, 3, 4, 234, 0.9140625, 'intermediate', 15, 0.859375)
(17, 3, 4, 234, 0.9140625)
(18, 3, 4, 202, 0.7890625, 'intermediate', 1, 0.765625)
(18, 3, 4, 208, 0.8125, 'intermediate', 4, 0.7890625)
(18, 3, 4, 218, 0.8515625, 'intermediate', 14, 0.8125)
(18, 3, 4, 218, 0.8515625)
KVC(0.9): (17, 3, 4)

(1, 3, 5, 2, 1.0)
(2, 3, 5, 4, 1.0)
(3, 3, 5, 8, 1.0)
(4, 3, 5, 16, 1.0)
(5, 3, 5, 32, 1.0)
(6, 3, 5, 64, 1.0)
(7, 3, 5, 128, 1.0)
(8, 3, 5, 256, 1.0)
(9, 3, 5, 256, 1.0)
(10, 3, 5, 256, 1.0)
(11, 3, 5, 256, 1.0)
(12, 3, 5, 256, 1.0)
(13, 3, 5, 256, 1.0)
(14, 3, 5, 252, 0.984375, 'intermediate', 3, 0.9765625)
(14, 3, 5, 254, 0.9921875, 'intermediate', 4, 0.984375)
(14, 3, 5, 254, 0.9921875)
(15, 3, 5, 252, 0.984375, 'intermediate', 1, 0.9453125)
(15, 3, 5, 254, 0.9921875, 'intermediate', 19, 0.984375)
(15, 3, 5, 254, 0.9921875)
(16, 3, 5, 244, 0.953125, 'intermediate', 1, 0.9453125)
(16, 3, 5, 248, 0.96875, 'intermediate', 4, 0.953125)
(16, 3, 5, 250, 0.9765625, 'intermediate', 9, 0.96875)
(16, 3, 5, 254, 0.9921875, 'intermediate', 12, 0.9765625)
(16, 3, 5, 254, 0.9921875)
(17, 3, 5, 238, 0.9296875, 'intermediate', 1, 0.8828125)
(17, 3, 5, 246, 0.9609375, 'intermediate', 3, 0.9296875)
(17, 3, 5, 250, 0.9765625, 'intermediate', 16, 0.9609375)
(17, 3, 5, 250, 0.9765625)
(18, 3, 5, 224, 0.875, 'intermediate', 1, 0.8671875)
(18, 3, 5, 228, 0.890625, 'intermediate', 3, 0.875)
(18, 3, 5, 230, 0.8984375, 'intermediate', 4, 0.890625)
(18, 3, 5, 234, 0.9140625, 'intermediate', 5, 0.8984375)
(18, 3, 5, 236, 0.921875, 'intermediate', 12, 0.9140625)
(18, 3, 5, 242, 0.9453125, 'intermediate', 16, 0.921875)
(18, 3, 5, 242, 0.9453125)
(19, 3, 5, 236, 0.921875, 'intermediate', 1, 0.8671875)
(19, 3, 5, 236, 0.921875)
(20, 3, 5, 214, 0.8359375, 'intermediate', 1, 0.734375)
(20, 3, 5, 218, 0.8515625, 'intermediate', 12, 0.8359375)
(20, 3, 5, 222, 0.8671875, 'intermediate', 15, 0.8515625)
(20, 3, 5, 222, 0.8671875)
KVC(0.9): (19, 3, 5)

(1, 3, 6, 2, 1.0)
(2, 3, 6, 4, 1.0)
(3, 3, 6, 8, 1.0)
(4, 3, 6, 16, 1.0)
(5, 3, 6, 32, 1.0)
(6, 3, 6, 64, 1.0)
(7, 3, 6, 128, 1.0)
(8, 3, 6, 256, 1.0)
(9, 3, 6, 256, 1.0)
(10, 3, 6, 256, 1.0)
(11, 3, 6, 256, 1.0)
(12, 3, 6, 256, 1.0)
(13, 3, 6, 256, 1.0)
(14, 3, 6, 256, 1.0)
(15, 3, 6, 256, 1.0)
(16, 3, 6, 252, 0.984375, 'intermediate', 1, 0.9765625)
(16, 3, 6, 254, 0.9921875, 'intermediate', 5, 0.984375)
(16, 3, 6, 254, 0.9921875)
(17, 3, 6, 252, 0.984375, 'intermediate', 4, 0.96875)
(17, 3, 6, 254, 0.9921875, 'intermediate', 12, 0.984375)
(17, 3, 6, 254, 0.9921875)
(18, 3, 6, 244, 0.953125, 'intermediate', 2, 0.9375)
(18, 3, 6, 250, 0.9765625, 'intermediate', 5, 0.953125)
(18, 3, 6, 250, 0.9765625)
(19, 3, 6, 242, 0.9453125, 'intermediate', 1, 0.9375)
(19, 3, 6, 246, 0.9609375, 'intermediate', 14, 0.9453125)
(19, 3, 6, 246, 0.9609375)
(20, 3, 6, 232, 0.90625, 'intermediate', 2, 0.890625)
(20, 3, 6, 234, 0.9140625, 'intermediate', 8, 0.90625)
(20, 3, 6, 236, 0.921875, 'intermediate', 12, 0.9140625)
(20, 3, 6, 240, 0.9375, 'intermediate', 14, 0.921875)
(20, 3, 6, 240, 0.9375)
(21, 3, 6, 224, 0.875, 'intermediate', 1, 0.8359375)
(21, 3, 6, 230, 0.8984375, 'intermediate', 2, 0.875)
(21, 3, 6, 234, 0.9140625, 'intermediate', 5, 0.8984375)
(21, 3, 6, 234, 0.9140625)
(22, 3, 6, 224, 0.875, 'intermediate', 12, 0.8515625)
(22, 3, 6, 224, 0.875)
KVC(0.9): (21, 3, 6)

(1, 3, 7, 2, 1.0)
(2, 3, 7, 4, 1.0)
(3, 3, 7, 8, 1.0)
(4, 3, 7, 16, 1.0)
(5, 3, 7, 32, 1.0)
(6, 3, 7, 64, 1.0)
(7, 3, 7, 128, 1.0)
(8, 3, 7, 256, 1.0)
(9, 3, 7, 256, 1.0)
(10, 3, 7, 256, 1.0)
(11, 3, 7, 256, 1.0)
(12, 3, 7, 256, 1.0)
(13, 3, 7, 256, 1.0)
(14, 3, 7, 256, 1.0)
(15, 3, 7, 256, 1.0)
(16, 3, 7, 256, 1.0)
(17, 3, 7, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(17, 3, 7, 256, 1.0)
(18, 3, 7, 254, 0.9921875)
(19, 3, 7, 252, 0.984375, 'intermediate', 5, 0.96875)
(19, 3, 7, 252, 0.984375)
(20, 3, 7, 246, 0.9609375, 'intermediate', 1, 0.953125)
(20, 3, 7, 248, 0.96875, 'intermediate', 12, 0.9609375)
(20, 3, 7, 250, 0.9765625, 'intermediate', 15, 0.96875)
(20, 3, 7, 250, 0.9765625)
(21, 3, 7, 244, 0.953125, 'intermediate', 1, 0.921875)
(21, 3, 7, 246, 0.9609375, 'intermediate', 2, 0.953125)
(21, 3, 7, 248, 0.96875, 'intermediate', 12, 0.9609375)
(21, 3, 7, 250, 0.9765625, 'intermediate', 14, 0.96875)
(21, 3, 7, 250, 0.9765625)
(22, 3, 7, 242, 0.9453125, 'intermediate', 1, 0.9296875)
(22, 3, 7, 242, 0.9453125)
(23, 3, 7, 234, 0.9140625, 'intermediate', 1, 0.8984375)
(23, 3, 7, 236, 0.921875, 'intermediate', 2, 0.9140625)
(23, 3, 7, 240, 0.9375, 'intermediate', 5, 0.921875)
(23, 3, 7, 242, 0.9453125, 'intermediate', 19, 0.9375)
(23, 3, 7, 242, 0.9453125)
(24, 3, 7, 232, 0.90625, 'intermediate', 12, 0.8984375)
(24, 3, 7, 232, 0.90625)
(25, 3, 7, 224, 0.875)
KVC(0.9): (24, 3, 7)

(1, 3, 8, 2, 1.0)
(2, 3, 8, 4, 1.0)
(3, 3, 8, 8, 1.0)
(4, 3, 8, 16, 1.0)
(5, 3, 8, 32, 1.0)
(6, 3, 8, 64, 1.0)
(7, 3, 8, 128, 1.0)
(8, 3, 8, 256, 1.0)
(9, 3, 8, 256, 1.0)
(10, 3, 8, 256, 1.0)
(11, 3, 8, 256, 1.0)
(12, 3, 8, 256, 1.0)
(13, 3, 8, 256, 1.0)
(14, 3, 8, 256, 1.0)
(15, 3, 8, 256, 1.0)
(16, 3, 8, 256, 1.0)
(17, 3, 8, 256, 1.0)
(18, 3, 8, 254, 0.9921875, 'intermediate', 1, 0.984375)
(18, 3, 8, 256, 1.0)
(19, 3, 8, 252, 0.984375, 'intermediate', 1, 0.96875)
(19, 3, 8, 254, 0.9921875, 'intermediate', 11, 0.984375)
(19, 3, 8, 256, 1.0)
(20, 3, 8, 250, 0.9765625, 'intermediate', 3, 0.96875)
(20, 3, 8, 252, 0.984375, 'intermediate', 12, 0.9765625)
(20, 3, 8, 254, 0.9921875, 'intermediate', 14, 0.984375)
(20, 3, 8, 254, 0.9921875)
(21, 3, 8, 248, 0.96875, 'intermediate', 1, 0.9453125)
(21, 3, 8, 250, 0.9765625, 'intermediate', 5, 0.96875)
(21, 3, 8, 252, 0.984375, 'intermediate', 15, 0.9765625)
(21, 3, 8, 252, 0.984375)
(22, 3, 8, 244, 0.953125, 'intermediate', 1, 0.9453125)
(22, 3, 8, 248, 0.96875, 'intermediate', 3, 0.953125)
(22, 3, 8, 250, 0.9765625, 'intermediate', 12, 0.96875)
(22, 3, 8, 250, 0.9765625)
(23, 3, 8, 248, 0.96875, 'intermediate', 1, 0.9453125)
(23, 3, 8, 248, 0.96875)
(24, 3, 8, 238, 0.9296875, 'intermediate', 2, 0.9140625)
(24, 3, 8, 242, 0.9453125, 'intermediate', 12, 0.9296875)
(24, 3, 8, 244, 0.953125, 'intermediate', 14, 0.9453125)
(24, 3, 8, 244, 0.953125)
(25, 3, 8, 236, 0.921875, 'intermediate', 2, 0.90625)
(25, 3, 8, 240, 0.9375, 'intermediate', 14, 0.921875)
(25, 3, 8, 240, 0.9375)
(26, 3, 8, 228, 0.890625, 'intermediate', 12, 0.8828125)
(26, 3, 8, 230, 0.8984375, 'intermediate', 16, 0.890625)
(26, 3, 8, 230, 0.8984375)
KVC(0.9): (25, 3, 8)

done
(1, 4, 1, 2, 1.0)
(2, 4, 1, 4, 1.0)
(3, 4, 1, 8, 1.0)
(4, 4, 1, 16, 1.0)
(5, 4, 1, 32, 1.0)
(6, 4, 1, 62, 0.96875)
(7, 4, 1, 114, 0.890625, 'intermediate', 1, 0.859375)
(7, 4, 1, 114, 0.890625)
KVC(0.9): (6, 4, 1)

(1, 4, 2, 2, 1.0)
(2, 4, 2, 4, 1.0)
(3, 4, 2, 8, 1.0)
(4, 4, 2, 16, 1.0)
(5, 4, 2, 32, 1.0)
(6, 4, 2, 64, 1.0)
(7, 4, 2, 128, 1.0)
(8, 4, 2, 254, 0.9921875, 'intermediate', 1, 0.984375)
(8, 4, 2, 256, 1.0)
(9, 4, 2, 252, 0.984375, 'intermediate', 3, 0.9765625)
(9, 4, 2, 254, 0.9921875, 'intermediate', 4, 0.984375)
(9, 4, 2, 254, 0.9921875)
(10, 4, 2, 244, 0.953125, 'intermediate', 1, 0.9296875)
(10, 4, 2, 248, 0.96875, 'intermediate', 4, 0.953125)
(10, 4, 2, 250, 0.9765625, 'intermediate', 7, 0.96875)
(10, 4, 2, 250, 0.9765625)
(11, 4, 2, 242, 0.9453125, 'intermediate', 1, 0.921875)
(11, 4, 2, 242, 0.9453125)
(12, 4, 2, 226, 0.8828125, 'intermediate', 1, 0.875)
(12, 4, 2, 228, 0.890625, 'intermediate', 11, 0.8828125)
(12, 4, 2, 240, 0.9375, 'intermediate', 13, 0.890625)
(12, 4, 2, 240, 0.9375)
(13, 4, 2, 212, 0.828125, 'intermediate', 1, 0.8125)
(13, 4, 2, 218, 0.8515625, 'intermediate', 11, 0.828125)
(13, 4, 2, 220, 0.859375, 'intermediate', 18, 0.8515625)
(13, 4, 2, 220, 0.859375)
KVC(0.9): (12, 4, 2)

(1, 4, 3, 2, 1.0)
(2, 4, 3, 4, 1.0)
(3, 4, 3, 8, 1.0)
(4, 4, 3, 16, 1.0)
(5, 4, 3, 32, 1.0)
(6, 4, 3, 64, 1.0)
(7, 4, 3, 128, 1.0)
(8, 4, 3, 256, 1.0)
(9, 4, 3, 256, 1.0)
(10, 4, 3, 256, 1.0)
(11, 4, 3, 256, 1.0)
(12, 4, 3, 254, 0.9921875, 'intermediate', 1, 0.984375)
(12, 4, 3, 256, 1.0)
(13, 4, 3, 254, 0.9921875, 'intermediate', 2, 0.984375)
(13, 4, 3, 256, 1.0)
(14, 4, 3, 256, 1.0)
(15, 4, 3, 246, 0.9609375, 'intermediate', 1, 0.9375)
(15, 4, 3, 248, 0.96875, 'intermediate', 12, 0.9609375)
(15, 4, 3, 248, 0.96875)
(16, 4, 3, 238, 0.9296875, 'intermediate', 1, 0.921875)
(16, 4, 3, 240, 0.9375, 'intermediate', 11, 0.9296875)
(16, 4, 3, 242, 0.9453125, 'intermediate', 17, 0.9375)
(16, 4, 3, 242, 0.9453125)
(17, 4, 3, 228, 0.890625, 'intermediate', 1, 0.84375)
(17, 4, 3, 230, 0.8984375, 'intermediate', 14, 0.890625)
(17, 4, 3, 234, 0.9140625, 'intermediate', 15, 0.8984375)
(17, 4, 3, 234, 0.9140625)
(18, 4, 3, 222, 0.8671875, 'intermediate', 1, 0.828125)
(18, 4, 3, 224, 0.875, 'intermediate', 13, 0.8671875)
(18, 4, 3, 224, 0.875)
KVC(0.9): (17, 4, 3)

(1, 4, 4, 2, 1.0)
(2, 4, 4, 4, 1.0)
(3, 4, 4, 8, 1.0)
(4, 4, 4, 16, 1.0)
(5, 4, 4, 32, 1.0)
(6, 4, 4, 64, 1.0)
(7, 4, 4, 128, 1.0)
(8, 4, 4, 256, 1.0)
(9, 4, 4, 256, 1.0)
(10, 4, 4, 256, 1.0)
(11, 4, 4, 256, 1.0)
(12, 4, 4, 256, 1.0)
(13, 4, 4, 256, 1.0)
(14, 4, 4, 256, 1.0)
(15, 4, 4, 256, 1.0)
(16, 4, 4, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(16, 4, 4, 254, 0.9921875)
(17, 4, 4, 254, 0.9921875, 'intermediate', 1, 0.9609375)
(17, 4, 4, 254, 0.9921875)
(18, 4, 4, 238, 0.9296875, 'intermediate', 1, 0.90625)
(18, 4, 4, 244, 0.953125, 'intermediate', 2, 0.9296875)
(18, 4, 4, 250, 0.9765625, 'intermediate', 4, 0.953125)
(18, 4, 4, 250, 0.9765625)
(19, 4, 4, 242, 0.9453125)
(20, 4, 4, 230, 0.8984375, 'intermediate', 1, 0.875)
(20, 4, 4, 234, 0.9140625, 'intermediate', 15, 0.8984375)
(20, 4, 4, 234, 0.9140625)
(21, 4, 4, 234, 0.9140625)
(22, 4, 4, 212, 0.828125)
KVC(0.9): (21, 4, 4)

(1, 4, 5, 2, 1.0)
(2, 4, 5, 4, 1.0)
(3, 4, 5, 8, 1.0)
(4, 4, 5, 16, 1.0)
(5, 4, 5, 32, 1.0)
(6, 4, 5, 64, 1.0)
(7, 4, 5, 128, 1.0)
(8, 4, 5, 256, 1.0)
(9, 4, 5, 256, 1.0)
(10, 4, 5, 256, 1.0)
(11, 4, 5, 256, 1.0)
(12, 4, 5, 256, 1.0)
(13, 4, 5, 256, 1.0)
(14, 4, 5, 256, 1.0)
(15, 4, 5, 256, 1.0)
(16, 4, 5, 256, 1.0)
(17, 4, 5, 256, 1.0)
(18, 4, 5, 254, 0.9921875, 'intermediate', 10, 0.984375)
(18, 4, 5, 256, 1.0)
(19, 4, 5, 254, 0.9921875)
(20, 4, 5, 250, 0.9765625, 'intermediate', 1, 0.9609375)
(20, 4, 5, 250, 0.9765625)
(21, 4, 5, 250, 0.9765625, 'intermediate', 1, 0.9609375)
(21, 4, 5, 250, 0.9765625)
(22, 4, 5, 244, 0.953125, 'intermediate', 11, 0.9453125)
(22, 4, 5, 244, 0.953125)
(23, 4, 5, 238, 0.9296875)
(24, 4, 5, 216, 0.84375, 'intermediate', 1, 0.8359375)
(24, 4, 5, 218, 0.8515625, 'intermediate', 3, 0.84375)
(24, 4, 5, 234, 0.9140625, 'intermediate', 4, 0.8515625)
(24, 4, 5, 234, 0.9140625)
(25, 4, 5, 224, 0.875)
KVC(0.9): (24, 4, 5)

(1, 4, 6, 2, 1.0)
(2, 4, 6, 4, 1.0)
(3, 4, 6, 8, 1.0)
(4, 4, 6, 16, 1.0)
(5, 4, 6, 32, 1.0)
(6, 4, 6, 64, 1.0)
(7, 4, 6, 128, 1.0)
(8, 4, 6, 256, 1.0)
(9, 4, 6, 256, 1.0)
(10, 4, 6, 256, 1.0)
(11, 4, 6, 256, 1.0)
(12, 4, 6, 256, 1.0)
(13, 4, 6, 256, 1.0)
(14, 4, 6, 256, 1.0)
(15, 4, 6, 256, 1.0)
(16, 4, 6, 256, 1.0)
(17, 4, 6, 256, 1.0)
(18, 4, 6, 256, 1.0)
(19, 4, 6, 256, 1.0)
(20, 4, 6, 256, 1.0)
(21, 4, 6, 256, 1.0)
(22, 4, 6, 254, 0.9921875, 'intermediate', 1, 0.984375)
(22, 4, 6, 254, 0.9921875)
(23, 4, 6, 252, 0.984375)
(24, 4, 6, 250, 0.9765625, 'intermediate', 4, 0.953125)
(24, 4, 6, 250, 0.9765625)
(25, 4, 6, 246, 0.9609375)
(26, 4, 6, 240, 0.9375, 'intermediate', 2, 0.921875)
(26, 4, 6, 244, 0.953125, 'intermediate', 14, 0.9375)
(26, 4, 6, 244, 0.953125)
(27, 4, 6, 236, 0.921875)
(28, 4, 6, 234, 0.9140625, 'intermediate', 14, 0.890625)
(28, 4, 6, 234, 0.9140625)
(29, 4, 6, 212, 0.828125, 'intermediate', 2, 0.8203125)
(29, 4, 6, 220, 0.859375, 'intermediate', 4, 0.828125)
(29, 4, 6, 228, 0.890625, 'intermediate', 13, 0.859375)
(29, 4, 6, 228, 0.890625)
KVC(0.9): (28, 4, 6)

(1, 4, 7, 2, 1.0)
(2, 4, 7, 4, 1.0)
(3, 4, 7, 8, 1.0)
(4, 4, 7, 16, 1.0)
(5, 4, 7, 32, 1.0)
(6, 4, 7, 64, 1.0)
(7, 4, 7, 128, 1.0)
(8, 4, 7, 256, 1.0)
(9, 4, 7, 256, 1.0)
(10, 4, 7, 256, 1.0)
(11, 4, 7, 256, 1.0)
(12, 4, 7, 256, 1.0)
(13, 4, 7, 256, 1.0)
(14, 4, 7, 256, 1.0)
(15, 4, 7, 256, 1.0)
(16, 4, 7, 256, 1.0)
(17, 4, 7, 256, 1.0)
(18, 4, 7, 256, 1.0)
(19, 4, 7, 256, 1.0)
(20, 4, 7, 256, 1.0)
(21, 4, 7, 256, 1.0)
(22, 4, 7, 256, 1.0)
(23, 4, 7, 256, 1.0)
(24, 4, 7, 256, 1.0)
(25, 4, 7, 254, 0.9921875, 'intermediate', 19, 0.9765625)
(25, 4, 7, 254, 0.9921875)
(26, 4, 7, 248, 0.96875, 'intermediate', 2, 0.9375)
(26, 4, 7, 250, 0.9765625, 'intermediate', 14, 0.96875)
(26, 4, 7, 250, 0.9765625)
(27, 4, 7, 248, 0.96875)
(28, 4, 7, 246, 0.9609375)
(29, 4, 7, 242, 0.9453125)
(30, 4, 7, 216, 0.84375, 'intermediate', 3, 0.8359375)
(30, 4, 7, 226, 0.8828125, 'intermediate', 4, 0.84375)
(30, 4, 7, 230, 0.8984375, 'intermediate', 10, 0.8828125)
(30, 4, 7, 230, 0.8984375)
KVC(0.9): (29, 4, 7)

(1, 4, 8, 2, 1.0)
(2, 4, 8, 4, 1.0)
(3, 4, 8, 8, 1.0)
(4, 4, 8, 16, 1.0)
(5, 4, 8, 32, 1.0)
(6, 4, 8, 64, 1.0)
(7, 4, 8, 128, 1.0)
(8, 4, 8, 256, 1.0)
(9, 4, 8, 256, 1.0)
(10, 4, 8, 256, 1.0)
(11, 4, 8, 256, 1.0)
(12, 4, 8, 256, 1.0)
(13, 4, 8, 256, 1.0)
(14, 4, 8, 256, 1.0)
(15, 4, 8, 256, 1.0)
(16, 4, 8, 256, 1.0)
(17, 4, 8, 256, 1.0)
(18, 4, 8, 256, 1.0)
(19, 4, 8, 256, 1.0)
(20, 4, 8, 256, 1.0)
(21, 4, 8, 256, 1.0)
(22, 4, 8, 256, 1.0)
(23, 4, 8, 256, 1.0)
(24, 4, 8, 256, 1.0)
(25, 4, 8, 256, 1.0)
(26, 4, 8, 254, 0.9921875, 'intermediate', 14, 0.984375)
(26, 4, 8, 254, 0.9921875)
(27, 4, 8, 256, 1.0)
(28, 4, 8, 252, 0.984375)
(29, 4, 8, 252, 0.984375, 'intermediate', 16, 0.96875)
(29, 4, 8, 252, 0.984375)
(30, 4, 8, 242, 0.9453125, 'intermediate', 1, 0.9140625)
(30, 4, 8, 248, 0.96875, 'intermediate', 11, 0.9453125)
(30, 4, 8, 248, 0.96875)
(31, 4, 8, 240, 0.9375, 'intermediate', 1, 0.921875)
(31, 4, 8, 244, 0.953125, 'intermediate', 10, 0.9375)
(31, 4, 8, 244, 0.953125)
(32, 4, 8, 234, 0.9140625, 'intermediate', 1, 0.90625)
(32, 4, 8, 242, 0.9453125, 'intermediate', 10, 0.9140625)
(32, 4, 8, 242, 0.9453125)
(33, 4, 8, 230, 0.8984375, 'intermediate', 1, 0.8828125)
(33, 4, 8, 236, 0.921875, 'intermediate', 10, 0.8984375)
(33, 4, 8, 236, 0.921875)
(34, 4, 8, 228, 0.890625)
KVC(0.9): (33, 4, 8)

done
(1, 5, 1, 2, 1.0)
(2, 5, 1, 4, 1.0)
(3, 5, 1, 8, 1.0)
(4, 5, 1, 16, 1.0)
(5, 5, 1, 32, 1.0)
(6, 5, 1, 64, 1.0)
(7, 5, 1, 126, 0.984375)
(8, 5, 1, 240, 0.9375, 'intermediate', 1, 0.921875)
(8, 5, 1, 240, 0.9375)
(9, 5, 1, 226, 0.8828125)
KVC(0.9): (8, 5, 1)

(1, 5, 2, 2, 1.0)
(2, 5, 2, 4, 1.0)
(3, 5, 2, 8, 1.0)
(4, 5, 2, 16, 1.0)
(5, 5, 2, 32, 1.0)
(6, 5, 2, 64, 1.0)
(7, 5, 2, 128, 1.0)
(8, 5, 2, 256, 1.0)
(9, 5, 2, 256, 1.0)
(10, 5, 2, 256, 1.0)
(11, 5, 2, 252, 0.984375, 'intermediate', 1, 0.9375)
(11, 5, 2, 254, 0.9921875, 'intermediate', 14, 0.984375)
(11, 5, 2, 254, 0.9921875)
(12, 5, 2, 250, 0.9765625, 'intermediate', 1, 0.9140625)
(12, 5, 2, 250, 0.9765625)
(13, 5, 2, 242, 0.9453125, 'intermediate', 1, 0.921875)
(13, 5, 2, 242, 0.9453125)
(14, 5, 2, 236, 0.921875, 'intermediate', 1, 0.859375)
(14, 5, 2, 236, 0.921875)
(15, 5, 2, 220, 0.859375, 'intermediate', 1, 0.765625)
(15, 5, 2, 220, 0.859375)
KVC(0.9): (14, 5, 2)

(1, 5, 3, 2, 1.0)
(2, 5, 3, 4, 1.0)
(3, 5, 3, 8, 1.0)
(4, 5, 3, 16, 1.0)
(5, 5, 3, 32, 1.0)
(6, 5, 3, 64, 1.0)
(7, 5, 3, 128, 1.0)
(8, 5, 3, 256, 1.0)
(9, 5, 3, 256, 1.0)
(10, 5, 3, 256, 1.0)
(11, 5, 3, 256, 1.0)
(12, 5, 3, 256, 1.0)
(13, 5, 3, 256, 1.0)
(14, 5, 3, 256, 1.0)
(15, 5, 3, 254, 0.9921875, 'intermediate', 1, 0.96875)
(15, 5, 3, 254, 0.9921875)
(16, 5, 3, 252, 0.984375, 'intermediate', 1, 0.96875)
(16, 5, 3, 252, 0.984375)
(17, 5, 3, 248, 0.96875, 'intermediate', 1, 0.9609375)
(17, 5, 3, 248, 0.96875)
(18, 5, 3, 244, 0.953125, 'intermediate', 1, 0.9140625)
(18, 5, 3, 250, 0.9765625, 'intermediate', 11, 0.953125)
(18, 5, 3, 250, 0.9765625)
(19, 5, 3, 232, 0.90625, 'intermediate', 8, 0.8984375)
(19, 5, 3, 232, 0.90625)
(20, 5, 3, 234, 0.9140625, 'intermediate', 1, 0.84375)
(20, 5, 3, 234, 0.9140625)
(21, 5, 3, 210, 0.8203125, 'intermediate', 1, 0.78125)
(21, 5, 3, 212, 0.828125, 'intermediate', 2, 0.8203125)
(21, 5, 3, 216, 0.84375, 'intermediate', 5, 0.828125)
(21, 5, 3, 218, 0.8515625, 'intermediate', 9, 0.84375)
(21, 5, 3, 222, 0.8671875, 'intermediate', 14, 0.8515625)
(21, 5, 3, 222, 0.8671875)
KVC(0.9): (20, 5, 3)

(1, 5, 4, 2, 1.0)
(2, 5, 4, 4, 1.0)
(3, 5, 4, 8, 1.0)
(4, 5, 4, 16, 1.0)
(5, 5, 4, 32, 1.0)
(6, 5, 4, 64, 1.0)
(7, 5, 4, 128, 1.0)
(8, 5, 4, 256, 1.0)
(9, 5, 4, 256, 1.0)
(10, 5, 4, 256, 1.0)
(11, 5, 4, 256, 1.0)
(12, 5, 4, 256, 1.0)
(13, 5, 4, 256, 1.0)
(14, 5, 4, 256, 1.0)
(15, 5, 4, 256, 1.0)
(16, 5, 4, 256, 1.0)
(17, 5, 4, 256, 1.0)
(18, 5, 4, 256, 1.0)
(19, 5, 4, 252, 0.984375, 'intermediate', 1, 0.9609375)
(19, 5, 4, 254, 0.9921875, 'intermediate', 5, 0.984375)
(19, 5, 4, 254, 0.9921875)
(20, 5, 4, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(20, 5, 4, 254, 0.9921875)
(21, 5, 4, 244, 0.953125, 'intermediate', 1, 0.90625)
(21, 5, 4, 246, 0.9609375, 'intermediate', 5, 0.953125)
(21, 5, 4, 248, 0.96875, 'intermediate', 9, 0.9609375)
(21, 5, 4, 250, 0.9765625, 'intermediate', 14, 0.96875)
(21, 5, 4, 250, 0.9765625)
(22, 5, 4, 240, 0.9375, 'intermediate', 8, 0.9296875)
(22, 5, 4, 246, 0.9609375, 'intermediate', 16, 0.9375)
(22, 5, 4, 246, 0.9609375)
(23, 5, 4, 236, 0.921875, 'intermediate', 1, 0.8203125)
(23, 5, 4, 236, 0.921875)
(24, 5, 4, 226, 0.8828125, 'intermediate', 1, 0.8671875)
(24, 5, 4, 228, 0.890625, 'intermediate', 9, 0.8828125)
(24, 5, 4, 232, 0.90625, 'intermediate', 16, 0.890625)
(24, 5, 4, 232, 0.90625)
(25, 5, 4, 216, 0.84375, 'intermediate', 1, 0.7734375)
(25, 5, 4, 218, 0.8515625, 'intermediate', 9, 0.84375)
(25, 5, 4, 218, 0.8515625)
KVC(0.9): (24, 5, 4)

(1, 5, 5, 2, 1.0)
(2, 5, 5, 4, 1.0)
(3, 5, 5, 8, 1.0)
(4, 5, 5, 16, 1.0)
(5, 5, 5, 32, 1.0)
(6, 5, 5, 64, 1.0)
(7, 5, 5, 128, 1.0)
(8, 5, 5, 256, 1.0)
(9, 5, 5, 256, 1.0)
(10, 5, 5, 256, 1.0)
(11, 5, 5, 256, 1.0)
(12, 5, 5, 256, 1.0)
(13, 5, 5, 256, 1.0)
(14, 5, 5, 256, 1.0)
(15, 5, 5, 256, 1.0)
(16, 5, 5, 256, 1.0)
(17, 5, 5, 256, 1.0)
(18, 5, 5, 256, 1.0)
(19, 5, 5, 256, 1.0)
(20, 5, 5, 256, 1.0)
(21, 5, 5, 256, 1.0)
(22, 5, 5, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(22, 5, 5, 256, 1.0)
(23, 5, 5, 252, 0.984375, 'intermediate', 1, 0.96875)
(23, 5, 5, 256, 1.0)
(24, 5, 5, 256, 1.0)
(25, 5, 5, 252, 0.984375, 'intermediate', 1, 0.953125)
(25, 5, 5, 252, 0.984375)
(26, 5, 5, 248, 0.96875, 'intermediate', 1, 0.953125)
(26, 5, 5, 248, 0.96875)
(27, 5, 5, 244, 0.953125, 'intermediate', 1, 0.921875)
(27, 5, 5, 250, 0.9765625, 'intermediate', 8, 0.953125)
(27, 5, 5, 250, 0.9765625)
(28, 5, 5, 240, 0.9375, 'intermediate', 1, 0.828125)
(28, 5, 5, 240, 0.9375)
(29, 5, 5, 224, 0.875, 'intermediate', 1, 0.8359375)
(29, 5, 5, 228, 0.890625, 'intermediate', 2, 0.875)
(29, 5, 5, 230, 0.8984375, 'intermediate', 4, 0.890625)
(29, 5, 5, 232, 0.90625, 'intermediate', 14, 0.8984375)
(29, 5, 5, 236, 0.921875, 'intermediate', 16, 0.90625)
(29, 5, 5, 236, 0.921875)
(30, 5, 5, 226, 0.8828125, 'intermediate', 1, 0.8046875)
(30, 5, 5, 228, 0.890625, 'intermediate', 10, 0.8828125)
(30, 5, 5, 236, 0.921875, 'intermediate', 14, 0.890625)
(30, 5, 5, 236, 0.921875)
(31, 5, 5, 222, 0.8671875, 'intermediate', 1, 0.7890625)
(31, 5, 5, 232, 0.90625, 'intermediate', 9, 0.8671875)
(31, 5, 5, 232, 0.90625)
(32, 5, 5, 204, 0.796875, 'intermediate', 1, 0.7578125)
(32, 5, 5, 216, 0.84375, 'intermediate', 2, 0.796875)
(32, 5, 5, 216, 0.84375)
KVC(0.9): (31, 5, 5)

(1, 5, 6, 2, 1.0)
(2, 5, 6, 4, 1.0)
(3, 5, 6, 8, 1.0)
(4, 5, 6, 16, 1.0)
(5, 5, 6, 32, 1.0)
(6, 5, 6, 64, 1.0)
(7, 5, 6, 128, 1.0)
(8, 5, 6, 256, 1.0)
(9, 5, 6, 256, 1.0)
(10, 5, 6, 256, 1.0)
(11, 5, 6, 256, 1.0)
(12, 5, 6, 256, 1.0)
(13, 5, 6, 256, 1.0)
(14, 5, 6, 256, 1.0)
(15, 5, 6, 256, 1.0)
(16, 5, 6, 256, 1.0)
(17, 5, 6, 256, 1.0)
(18, 5, 6, 256, 1.0)
(19, 5, 6, 256, 1.0)
(20, 5, 6, 256, 1.0)
(21, 5, 6, 256, 1.0)
(22, 5, 6, 256, 1.0)
(23, 5, 6, 256, 1.0)
(24, 5, 6, 256, 1.0)
(25, 5, 6, 254, 0.9921875, 'intermediate', 1, 0.984375)
(25, 5, 6, 256, 1.0)
(26, 5, 6, 254, 0.9921875, 'intermediate', 1, 0.96875)
(26, 5, 6, 254, 0.9921875)
(27, 5, 6, 252, 0.984375, 'intermediate', 1, 0.9609375)
(27, 5, 6, 252, 0.984375)
(28, 5, 6, 250, 0.9765625, 'intermediate', 1, 0.9296875)
(28, 5, 6, 250, 0.9765625)
(29, 5, 6, 248, 0.96875, 'intermediate', 1, 0.9453125)
(29, 5, 6, 250, 0.9765625, 'intermediate', 16, 0.96875)
(29, 5, 6, 250, 0.9765625)
(30, 5, 6, 244, 0.953125, 'intermediate', 1, 0.859375)
(30, 5, 6, 246, 0.9609375, 'intermediate', 14, 0.953125)
(30, 5, 6, 246, 0.9609375)
(31, 5, 6, 234, 0.9140625, 'intermediate', 1, 0.8515625)
(31, 5, 6, 236, 0.921875, 'intermediate', 3, 0.9140625)
(31, 5, 6, 238, 0.9296875, 'intermediate', 9, 0.921875)
(31, 5, 6, 244, 0.953125, 'intermediate', 14, 0.9296875)
(31, 5, 6, 244, 0.953125)
(32, 5, 6, 238, 0.9296875, 'intermediate', 1, 0.84375)
(32, 5, 6, 238, 0.9296875)
(33, 5, 6, 230, 0.8984375, 'intermediate', 2, 0.890625)
(33, 5, 6, 232, 0.90625, 'intermediate', 13, 0.8984375)
(33, 5, 6, 232, 0.90625)
(34, 5, 6, 218, 0.8515625, 'intermediate', 1, 0.8203125)
(34, 5, 6, 228, 0.890625, 'intermediate', 2, 0.8515625)
(34, 5, 6, 234, 0.9140625, 'intermediate', 19, 0.890625)
(34, 5, 6, 234, 0.9140625)
(35, 5, 6, 218, 0.8515625, 'intermediate', 2, 0.8046875)
(35, 5, 6, 218, 0.8515625)
KVC(0.9): (34, 5, 6)

(1, 5, 7, 2, 1.0)
(2, 5, 7, 4, 1.0)
(3, 5, 7, 8, 1.0)
(4, 5, 7, 16, 1.0)
(5, 5, 7, 32, 1.0)
(6, 5, 7, 64, 1.0)
(7, 5, 7, 128, 1.0)
(8, 5, 7, 256, 1.0)
(9, 5, 7, 256, 1.0)
(10, 5, 7, 256, 1.0)
(11, 5, 7, 256, 1.0)
(12, 5, 7, 256, 1.0)
(13, 5, 7, 256, 1.0)
(14, 5, 7, 256, 1.0)
(15, 5, 7, 256, 1.0)
(16, 5, 7, 256, 1.0)
(17, 5, 7, 256, 1.0)
(18, 5, 7, 256, 1.0)
(19, 5, 7, 256, 1.0)
(20, 5, 7, 256, 1.0)
(21, 5, 7, 256, 1.0)
(22, 5, 7, 256, 1.0)
(23, 5, 7, 256, 1.0)
(24, 5, 7, 256, 1.0)
(25, 5, 7, 256, 1.0)
(26, 5, 7, 256, 1.0)
(27, 5, 7, 256, 1.0)
(28, 5, 7, 254, 0.9921875, 'intermediate', 1, 0.9765625)
(28, 5, 7, 256, 1.0)
(29, 5, 7, 252, 0.984375, 'intermediate', 1, 0.9765625)
(29, 5, 7, 254, 0.9921875, 'intermediate', 2, 0.984375)
(29, 5, 7, 254, 0.9921875)
(30, 5, 7, 254, 0.9921875, 'intermediate', 1, 0.953125)
(30, 5, 7, 254, 0.9921875)
(31, 5, 7, 250, 0.9765625, 'intermediate', 1, 0.90625)
(31, 5, 7, 252, 0.984375, 'intermediate', 9, 0.9765625)
(31, 5, 7, 252, 0.984375)
(32, 5, 7, 250, 0.9765625, 'intermediate', 1, 0.90625)
(32, 5, 7, 250, 0.9765625)
(33, 5, 7, 246, 0.9609375, 'intermediate', 1, 0.9296875)
(33, 5, 7, 248, 0.96875, 'intermediate', 13, 0.9609375)
(33, 5, 7, 250, 0.9765625, 'intermediate', 14, 0.96875)
(33, 5, 7, 250, 0.9765625)
(34, 5, 7, 246, 0.9609375, 'intermediate', 1, 0.8984375)
(34, 5, 7, 246, 0.9609375)
(35, 5, 7, 234, 0.9140625, 'intermediate', 1, 0.875)
(35, 5, 7, 238, 0.9296875, 'intermediate', 2, 0.9140625)
(35, 5, 7, 240, 0.9375, 'intermediate', 13, 0.9296875)
(35, 5, 7, 242, 0.9453125, 'intermediate', 16, 0.9375)
(35, 5, 7, 242, 0.9453125)
(36, 5, 7, 232, 0.90625, 'intermediate', 1, 0.84375)
(36, 5, 7, 234, 0.9140625, 'intermediate', 16, 0.90625)
(36, 5, 7, 234, 0.9140625)
(37, 5, 7, 226, 0.8828125, 'intermediate', 1, 0.84375)
(37, 5, 7, 228, 0.890625, 'intermediate', 19, 0.8828125)
(37, 5, 7, 228, 0.890625)
KVC(0.9): (36, 5, 7)

(1, 5, 8, 2, 1.0)
(2, 5, 8, 4, 1.0)
(3, 5, 8, 8, 1.0)
(4, 5, 8, 16, 1.0)
(5, 5, 8, 32, 1.0)
(6, 5, 8, 64, 1.0)
(7, 5, 8, 128, 1.0)
(8, 5, 8, 256, 1.0)
(9, 5, 8, 256, 1.0)
(10, 5, 8, 256, 1.0)
(11, 5, 8, 256, 1.0)
(12, 5, 8, 256, 1.0)
(13, 5, 8, 256, 1.0)
(14, 5, 8, 256, 1.0)
(15, 5, 8, 256, 1.0)
(16, 5, 8, 256, 1.0)
(17, 5, 8, 256, 1.0)
(18, 5, 8, 256, 1.0)
(19, 5, 8, 256, 1.0)
(20, 5, 8, 256, 1.0)
(21, 5, 8, 256, 1.0)
(22, 5, 8, 256, 1.0)
(23, 5, 8, 256, 1.0)
(24, 5, 8, 256, 1.0)
(25, 5, 8, 256, 1.0)
(26, 5, 8, 256, 1.0)
(27, 5, 8, 256, 1.0)
(28, 5, 8, 256, 1.0)
(29, 5, 8, 254, 0.9921875, 'intermediate', 4, 0.984375)
(29, 5, 8, 254, 0.9921875)
(30, 5, 8, 252, 0.984375, 'intermediate', 1, 0.953125)
(30, 5, 8, 254, 0.9921875, 'intermediate', 8, 0.984375)
(30, 5, 8, 256, 1.0)
(31, 5, 8, 254, 0.9921875, 'intermediate', 1, 0.9453125)
(31, 5, 8, 256, 1.0)
(32, 5, 8, 248, 0.96875, 'intermediate', 1, 0.9296875)
(32, 5, 8, 250, 0.9765625, 'intermediate', 9, 0.96875)
(32, 5, 8, 252, 0.984375, 'intermediate', 14, 0.9765625)
(32, 5, 8, 252, 0.984375)
(33, 5, 8, 252, 0.984375, 'intermediate', 2, 0.9453125)
(33, 5, 8, 252, 0.984375)
(34, 5, 8, 246, 0.9609375, 'intermediate', 1, 0.8984375)
(34, 5, 8, 250, 0.9765625, 'intermediate', 2, 0.9609375)
(34, 5, 8, 250, 0.9765625)
(35, 5, 8, 240, 0.9375, 'intermediate', 1, 0.90625)
(35, 5, 8, 246, 0.9609375, 'intermediate', 2, 0.9375)
(35, 5, 8, 246, 0.9609375)
(36, 5, 8, 242, 0.9453125, 'intermediate', 1, 0.8515625)
(36, 5, 8, 246, 0.9609375, 'intermediate', 13, 0.9453125)
(36, 5, 8, 246, 0.9609375)
(37, 5, 8, 238, 0.9296875, 'intermediate', 1, 0.8828125)
(37, 5, 8, 240, 0.9375, 'intermediate', 8, 0.9296875)
(37, 5, 8, 240, 0.9375)
(38, 5, 8, 232, 0.90625, 'intermediate', 1, 0.890625)
(38, 5, 8, 238, 0.9296875, 'intermediate', 8, 0.90625)
(38, 5, 8, 238, 0.9296875)
(39, 5, 8, 218, 0.8515625, 'intermediate', 1, 0.8203125)
(39, 5, 8, 230, 0.8984375, 'intermediate', 2, 0.8515625)
(39, 5, 8, 232, 0.90625, 'intermediate', 7, 0.8984375)
(39, 5, 8, 232, 0.90625)
(40, 5, 8, 228, 0.890625, 'intermediate', 1, 0.8515625)
(40, 5, 8, 228, 0.890625)
KVC(0.9): (39, 5, 8)

done
















N = 60
K = [2,3,4,5] #,2,3,4,5] #,4] #,3] #,4,5,6,7,8] #,9,10]
H = [1,2,3,4,5,6,7,8] #,32,128,512]

import itertools
import numpy
import random
from sklearn.neural_network import MLPClassifier

results = []
print("n","k","h","successful classifications", "rate")
for k in K:
    numpy.random.seed(0)
    # print data
    for h in H:
        numpy.random.seed(0)
        for n in range(N):
            n += 1
            data_results = []
            for r_data in range(20):
                numpy.random.seed(r_data)
                if False: #k == 1:
                    data = [[d] for d in range(N)]
                else:
                    data = numpy.random.uniform(size=[N,k])
                numpy.random.seed(0)
                true_results = 0
                if n <= 8:
                    labellist = ["".join(item) for item in itertools.product("10", repeat=n)]
                else:
                    labellist = [bin(numpy.random.randint(2**(N+2)+1, 2**(N+2)+1+2**n))[-n:] for i in range(256)]
                for labelstring in labellist:
                    labels = [int(i) for i in labelstring]
                    d = data[:n]
                    for r_mlp in range(20): #lbfgs
                        clf = MLPClassifier(
                            hidden_layer_sizes=(h,), random_state=r_mlp, 
                            #activation='relu', solver="lbfgs",
                            activation='tanh', solver="lbfgs",
                            alpha=0)
                        #clf = MLPClassifier(hidden_layer_sizes=(1,), random_state=r, activation='identity', solver="lbfgs")
                        clf.fit(d, labels)
                        if (clf.predict(d) == labels).all():
                            true_results += 1
                            break
                # true_results are always an even number!
                true_results += true_results % 2
                if true_results == 2**min(n,8):
                    data_results.append(true_results)
                    break
                if data_results and true_results > max(data_results):
                    print(n, k, h, true_results, true_results*1.0/2**min(n,8), "intermediate", r_data, max(data_results)*1.0/2**min(n,8))
                data_results.append(true_results)
            true_results = max(data_results)
            print(n, k, h, true_results, true_results*1.0/2**min(n,8))
            results.append((n, k, h, true_results, true_results*1.0/2**min(n,8)))
            if true_results*1.0/2**min(n,8) < 0.9:
                print "KVC(0.9): "+str((n-1,k, h))
                print
                break
    print "done"